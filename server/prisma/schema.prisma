datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  username   String
  password   String?
  avatar     String?
  followedBy User[]    @relation("FollowRelation", references: [id])
  followings User[]    @relation("FollowRelation", references: [id])
  likes      Like[]
  posts      Post[]
  comments   Comment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  contents   String?
  author     User?     @relation(fields: [authorId], references: [id])
  authorId   Int?
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  likes      Like[]
  comments   Comment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  comment   Comment? @relation(fields: [commentId], references: [id])
  commentId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, postId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  payload   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes     Like[]
}
